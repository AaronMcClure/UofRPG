{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12600\viewh7800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Proposal\
=======================\
Animation:\
	Purpose: To elegantly update sprites for gameplay. The animations should be clear to understand, sharp and smooth. Also, animations should be generic, easily re-used, and adaptable. \
\
	How it links to other sections: \
		Game mechanics is essentially going to dictate how animation works. \
		Examples: how text screens work, where should they appear\
				 how fast should the character walk across the map\
\
		other section also need to easily interact with Animation.\
		Examples: Coordinate on map where events for should take place\
				  Placement of items/east bunnies\
\
	Requirements in order for Animation to function:\
		Generic map that marks collision areas, and sets a finite coordinate system on the map.\
		a player, represented by a rectangle to animate on generic map.\
\
		with these , even if all art assets are lost, animation can keep its functionality. Also, other sections aren\'92t affected as well\
\
	Planning:\
		A. Making player moveable on map.\
		B. Making player unable to move on certain tiles\
		C. Generic text animation that take input and elegantly presents 	it on screen *game mechanics*\
		D. Pause Screen *game mechanics*\
		E. Easily switch map/screens.\
		F. all minigames and ulterior generic maps \
		*changes as game develops and not yet planned at all*\
\
Art: *because of sheer time commitment, it has been moved to a section of its own*\
		\
		Purpose: Make the game gorgeous, consent, and simple. Can make/break the game, truly key.\
\
	Planning:\
		1. NPCs/Player creation\
		2. TILE map creation\
			***GENERIC MAPS FIRST, so animation can function.\
			-must be flexible tiles that easily work together to make a really elegant map\
			-a finite definite list of all tiles needed\
			-need to be spaced and carefully planned. There is a massive amount of tiles that need to be created since we chose to make these.\
		3. improve Animations that work with game mechanics, \
				such as pause/text screen\
				\
Plot:\
	Purpose: Provide a story while going through the game (i.e. events, dialogue). Does not have to be complex, but it should provide incentive for the player to want to continue the game\
	\
	How it links to other sections:\
		Progression and Plot are very entwined and are thus going to be constantly working with one another.\
		Examples: How achievements relate to the story, dialogue for progressing through the game\
		\
		Game Mechanics and Plot are going to need to talk to one another to make sure the story incorporated the usage of the game mechanics\
		Examples:	Acquisition of certain abilities should be plot related, the types of mechanics\
					involved should impact the direction the story\
					\
		Plot will also be influencing certain aspects of art and animation to make sure parts of the story are implemented\
					\
		Requirements in order for plot to function\
			Most of the plot will be written down and executed using art and animation. However, art and framework are going to need to be contacted\
			to make things such as dialogue boxes.\
			\
	Planning:\
		A. Wait for a majority of Game Mechanics to be completed.\
		B. Write a synopsis and summary of a planned story\
		C. Start making drafts of a script that includes dialogue for main quest and side quests\
		D. Write Final draft for story and dialogue\
		E. Work with art and animation to create specific animation and dialogue boxes to fit story\
		F. Implement dialogue into the game\
\
Backend:\
	Purpose: To provide a fluid gameplay, a structured database, keep the server running, updating the server, having fluidity and responsively throughout gameplay and throughout retrieving and manipulating data.\
\
	How it links to other sections:\
		It is the backbone of every section. Without a backend, there is no way to display a front end. \
		Each section must rely on the backend to elegantly connect each and every section of the project together.\
		The backend will also deal with the database that stores all the information about the game and each individual player\'92s stats.\
		This section is simply the structural integrity for the rest of the project.\
\
	Requirements:\
		Server\
		Database\
		Frameworks\
		A Front End\
		Domain\
		\
	\
	Planning:\
		A. Create accounts table and credential storage.\
		B. Delivery game to user via website.\
		C. Serve up the game. (Prototype.)\
		D. Store user data of users playing.\
		E. Create the backend for whatever idea that will inevitable come up throughout this game making process.\
\
User Interface:\
	Purpose: To display all content to the user.  This includes everything from menu options to gameplay graphics and dialogs. \
\
	How it links to other sections: \
\
		User interfacing displays the work generated from the other groups to the user.  Therefore this category is responsible for rendering work from all groups. It is important to communicate with game mechanics/framework.\
		Examples: Display game logic to user as dictated by game mechanics/framework. Visually depict what is happening in the game.\
\
		User interfacing also must communicate with animation. \
		Examples: how animations are displayed, buffered, rendering priority, framerates, frequencies, iteration, etc.\
\
	Requirements in order for User Interface to function:\
		All sections need to easily be able to interact with the User Interface. UI must standardize methods/api for interacting and outputting.  Input must be accurate and functional in order to display to the user.\
		\
	Planning:\
		A. Setup containers (via EaselJS library) for switching between outputs.\
		B. Create standard components (buttons, labels, etc.)\
		C. Creation of menu system and setup website layout, look and feel, etc.\
		D. Loading of game and required assets/libraries\
		E. Rendering of game. Correctly display gameplay and information to user\
		F. Respond to user actions/input\
\
}